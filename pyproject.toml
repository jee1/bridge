[project]
name = "bridge"
version = "0.1.0"
description = "Bridge MCP Orchestrator"
authors = [{name = "Bridge Contributors"}]
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.111.0",
    "uvicorn[standard]>=0.29.0",
    "pydantic>=2.7.0",
    "asyncpg>=0.29.0",
    "celery[redis]>=5.3.6",
    "langchain>=0.1.0",
    "openai>=1.30.0",
    "sqlalchemy>=2.0.0",
    "pymongo>=4.7.0",
    "elasticsearch>=8.12.0",
    "polars>=0.20.0",
    "pandas>=2.2.0",
    "mcp==1.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=8.2.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.27.0",
    "black>=24.3.0",
    "isort>=5.13.0",
    "mypy>=1.9.0",
    "bandit>=1.7.5",
    "safety>=2.3.5",
    "python-json-logger>=2.0.0"
]

[project.scripts]
bridge-mcp = "bridge.mcp_server_robust:run"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 100

[tool.pytest.ini_options]
addopts = "-q --cov=src --cov-report=term-missing --cov-report=html --cov-fail-under=80"
pythonpath = ["src"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.bandit]
exclude_dirs = ["tests", "test_*"]
skips = ["B101", "B601"]